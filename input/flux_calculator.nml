&input
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! time stepping options - will be changed automatically !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  timestep      = 600,   ! coupling time step in seconds
  num_timesteps = 4464,
 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! Bottom models and parallelization of the flux calculation !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  name_bottom_model  (1) = 'MOM5_Baltic',  
  letter_bottom_model(1) = 'M'
  num_tasks_per_model(1) = 1,               ! how many MPI tasks will do the flux calculation on this model's exchange grid
  num_t_grid_cells(1,1)  = 0,               ! number of grid cells used in this (model,task), default=0 meaning this is auto-determined if num_tasks_per_model=1
  
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! Input from bottom models              !
  ! by (model,surface_type,runningnumber) !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  name_bottom_var_t(1,1:6,1) = 'FARE','FARE','FARE','FARE','FARE','FARE',        ! which variables (model,surface_type,runningnumber) come from the bottom model grid
  name_bottom_var_t(1,1:6,2) = 'TSUR','TSUR','TSUR','TSUR','TSUR','TSUR',  
  name_bottom_var_t(1,1:6,3) = 'FICE','FICE','FICE','FICE','FICE','FICE',
  val_bottom_var_t (1,1:6,3) = 0.0, 1.0, 1.0, 1.0, 1.0, 1.0,                     ! constant values can be given, in this case no read from coupler

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! Input from atmos model                                                                     !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! name_atmos_var_t(num_var): name of variable on atmospheric t grid                          !
  ! val_atmos_var_t(num_var) : constant values can be given, in this case no read from coupler !
  ! the same for _u and _v grid                                                                !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  name_atmos_var_t( 1) = 'TATM',      ! atmospheric temperature (K) 
  name_atmos_var_t( 2) = 'PATM',      ! atmospheric pressure in lowest grid cell (Pa) 
  name_atmos_var_t( 3) = 'PSUR',      ! atmospheric pressure at surface (Pa)
  name_atmos_var_t( 4) = 'MRAI',      ! liquid precipitation (kg/m2/s) (=rain, negative values)
  name_atmos_var_t( 5) = 'MSNO',      ! solid precipitation (kg/m2/s) (=snow, negative values)
  name_atmos_var_t( 6) = 'RLWD',      ! longwave downward radiation (W/m2) (negative values)
  name_atmos_var_t( 7) = 'RLWU',      ! longwave upward radiation (W/m2)
  name_atmos_var_t( 8) = 'RSDD',      ! shortwave direct downward radiation (W/m2) (negative values)
  name_atmos_var_t( 9) = 'RSIN',      ! shortwave indirect (=diffusive) downward radiation (W/m2) (negative values)
  name_atmos_var_t(10) = 'AMOI',      ! turbulent diffusion coefficient for atmospheric moisture (m2/s)
  name_atmos_var_t(11) = 'AMOM',      ! turbulent diffusion coefficient for atmospheric momentum (m2/s)
  name_atmos_var_t(12) = 'QATM',      ! specific water vapor content at surface (kg/kg)
  name_atmos_var_t(13) = 'UATM',      ! eastward wind in lowest atmospheric cell (m/s)
  name_atmos_var_t(14) = 'VATM',      ! northward wind in lowest atmospheric cell (m/s)
  name_atmos_var_u( 1) = 'U10M',      ! 10m wind eastward
  name_atmos_var_v( 1) = 'V10M',      ! 10m wind northward


  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! Output of calculated fluxes and variables that are passed onward                             !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! name_send_t(num_var)               : name of calculated flux to be sent to everyone          !
  !                                      (except those models which sent it themselves)          !
  ! send_uniform_t(num_model,num_var)  : if for this bottom model, the flux is identical for all !
  !                                      surface_types, set to .TRUE. (default=.FALSE.)          !
  ! send_to_bottom_t(num_model,num_var): set to .FALSE. to avoid that this flux is sent to this  !
  !                                      bottom model (default=.TRUE.)                           !
  ! the same for _u and _v grid                                                                  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                                          
  name_send_t(1)        = 'TSUR'   ! surface temperature
  send_to_bottom_t(1,1) = .FALSE.          
  name_send_t(2)        = 'RBBR'   ! blackbody radiation
  send_to_bottom_t(1,2) = .FALSE.
  name_send_t(3)        = 'MEVA'   ! evaporation mass flux
  send_to_bottom_t(1,3) = .FALSE.
  name_send_t(4)        = 'HLAT'   ! latent heat flux upward
  send_to_bottom_t(1,4) = .FALSE.
  name_send_t(5)        = 'HSEN'   ! sensible heat flux
  send_to_bottom_t(1,5) = .FALSE.
  name_send_u(1)        = 'UMOM'   ! upward flux of eastward momentum
  send_to_bottom_u(1,1) = .FALSE.
  name_send_v(1)        = 'VMOM'   ! upward flux of northward momentum
  send_to_bottom_v(1,1) = .FALSE.
  !  name_send_t(3)       = 'PATM', ! atmospheric pressure
  !  name_send_t(4)       = 'MPRL', ! liquid precipitation (rain, negative values)
  !  name_send_t(5)       = 'MPRS', ! solid precipitation (snow, negative values)
  !  name_send_t(6)       = 'RLWD', ! longwave downward radiation (negative values)
  !  name_send_t(7)       = 'RLWU', ! longwave upward radiation
  !  name_send_t(8)       = 'RSWD', ! shortwave direct downward radiation (negative values)
  !  name_send_t(9)       = 'RSWI', ! shortwave indirect (=diffusive) downward radiation (negative values)
  !  name_send_t(10)      = 'HLAT', ! heatflux latent, upward
  !  name_send_t(11)      = 'HSEN', ! heatflux sensible, upward
  !  name_send_u(1)       = 'U10M', ! 10m wind eastward
  !  name_send_u(2)       = 'UMOM', ! upward flux of eastward momentum
  !  name_send_v(1)       = 'V10M', ! 10m wind northward
  !  name_send_v(2)       = 'VMOM', ! upward flux of northward momentum
  
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! Regridding between u/v and t-grid                                                  !
  ! Which variables shall be regridded after being read from the coupler or calculated !
  ! by (model, surface_type, index)                                                    !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !regrid_u_to_t  
  !regrid_v_to_t
  
  regrid_t_to_u(1,1:6,1) = 'UATM','UATM','UATM','UATM','UATM','UATM'
  regrid_t_to_u(1,1:6,2) = 'VATM','VATM','VATM','VATM','VATM','VATM'
  regrid_t_to_u(1,1:6,3) = 'AMOM','AMOM','AMOM','AMOM','AMOM','AMOM'
  regrid_t_to_u(1,1:6,4) = 'PSUR','PSUR','PSUR','PSUR','PSUR','PSUR'
  regrid_t_to_u(1,1:6,5) = 'TATM','TATM','TATM','TATM','TATM','TATM'
  regrid_t_to_u(1,1:6,6) = 'TSUR','TSUR','TSUR','TSUR','TSUR','TSUR'
  regrid_t_to_u(1,1:6,7) = 'QSUR','QSUR','QSUR','QSUR','QSUR','QSUR'  
  
  regrid_t_to_v(1,1:6,1) = 'UATM','UATM','UATM','UATM','UATM','UATM'
  regrid_t_to_v(1,1:6,2) = 'VATM','VATM','VATM','VATM','VATM','VATM'
  regrid_t_to_v(1,1:6,3) = 'AMOM','AMOM','AMOM','AMOM','AMOM','AMOM'
  regrid_t_to_v(1,1:6,4) = 'PSUR','PSUR','PSUR','PSUR','PSUR','PSUR'
  regrid_t_to_v(1,1:6,5) = 'TATM','TATM','TATM','TATM','TATM','TATM'
  regrid_t_to_v(1,1:6,6) = 'TSUR','TSUR','TSUR','TSUR','TSUR','TSUR'
  regrid_t_to_v(1,1:6,7) = 'QSUR','QSUR','QSUR','QSUR','QSUR','QSUR'  

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! How are auxiliary variables calculated  !
  ! by (model,surface_type)                 !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  which_spec_vapor_surface_t(1,1:6) = 'CCLM','CCLM','CCLM','CCLM','CCLM','CCLM'   ! 'none' 'copy' 'CCLM'
  which_spec_vapor_surface_u(1,1) = 'none',   ! 'none' 'CCLM'
  which_spec_vapor_surface_v(1,1) = 'none',   ! 'none' 'CCLM'

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  ! How are fluxes calculated !
  ! by (model,surfacetype)    !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  which_flux_mass_evap          (1,1:6) = 'CCLM','CCLM','CCLM','CCLM','CCLM','CCLM'         ! 'none' 'zero' 'copy' 'CCLM'           -> MEVA
  which_flux_heat_latent        (1,1:6) = 'water','ice','ice','ice','ice','ice'             ! 'none' 'zero' 'copy' 'ice' 'water'    -> HLAT
  which_flux_heat_sensible      (1,1:6) = 'CCLM','CCLM','CCLM','CCLM','CCLM','CCLM'         ! 'none' 'zero' 'copy' 'CCLM'           -> HSEN
  which_flux_momentum           (1,1:6) = 'CCLM','CCLM','CCLM','CCLM','CCLM','CCLM'         ! 'none' 'zero' 'copy' 'CCLM'           -> UMOM, VMOM
  which_flux_radiation_blackbody(1,1:6) = 'StBo', 'StBo', 'StBo', 'StBo', 'StBo', 'StBo'    ! 'none' 'zero' 'copy' 'StBo'           -> RBBR
/
